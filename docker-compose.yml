version: '3.9'
services:
  backend:
    container_name: backend
    build:
      dockerfile: Dockerfile
      context: ./backend
      target: development
    volumes:
      - .:/usr/src/app
    environment:
      APP_PORT: ${APP_PORT}
      JWT_SECRET: ${JWT_SECRET}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    command: npm run dev
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      - redis
      - postgres
  redis:
    image: redis
    container_name: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis:/data
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - auction:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - ${PGADMIN_EXPOSED_PORT}:${PGADMIN_PORT}
    depends_on:
      - postgres
volumes:
  redis:
    driver: local
  auction:
